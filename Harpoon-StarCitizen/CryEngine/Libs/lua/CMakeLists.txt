#START-FILE-LIST
# File List auto generated by waf2cmake.py, do not modify manually.

start_sources()
# -- lua.waf_files --
sources_platform(ALL)
add_sources("NoUberFile"
	PROJECTS lua
	SOURCE_GROUP "Root"
		"${SDK_DIR}/Lua/src/lapi.c"
		"${SDK_DIR}/Lua/src/lauxlib.c"
		"${SDK_DIR}/Lua/src/lbaselib.c"
		"${SDK_DIR}/Lua/src/lcode.c"
		"${SDK_DIR}/Lua/src/ldblib.c"
		"${SDK_DIR}/Lua/src/ldebug.c"
		"${SDK_DIR}/Lua/src/ldo.c"
		"${SDK_DIR}/Lua/src/ldump.c"
		"${SDK_DIR}/Lua/src/lfunc.c"
		"${SDK_DIR}/Lua/src/lgc.c"
		"${SDK_DIR}/Lua/src/linit.c"
		"${SDK_DIR}/Lua/src/liolib.c"
		"${SDK_DIR}/Lua/src/llex.c"
		"${SDK_DIR}/Lua/src/lmathlib.c"
		"${SDK_DIR}/Lua/src/lmem.c"
		"${SDK_DIR}/Lua/src/loadlib.c"
		"${SDK_DIR}/Lua/src/lobject.c"
		"${SDK_DIR}/Lua/src/lopcodes.c"
		"${SDK_DIR}/Lua/src/loslib.c"
		"${SDK_DIR}/Lua/src/lparser.c"
		"${SDK_DIR}/Lua/src/lstate.c"
		"${SDK_DIR}/Lua/src/lstring.c"
		"${SDK_DIR}/Lua/src/lstrlib.c"
		"${SDK_DIR}/Lua/src/ltable.c"
		"${SDK_DIR}/Lua/src/ltablib.c"
		"${SDK_DIR}/Lua/src/ltm.c"
		"${SDK_DIR}/Lua/src/lundump.c"
		"${SDK_DIR}/Lua/src/lvm.c"
		"${SDK_DIR}/Lua/src/lzio.c"
		"${SDK_DIR}/Lua/src/print.c"
		"${SDK_DIR}/Lua/src/lbitlib.c"
		"${SDK_DIR}/Lua/src/lapi.h"
		"${SDK_DIR}/Lua/src/lauxlib.h"
		"${SDK_DIR}/Lua/src/lcode.h"
		"${SDK_DIR}/Lua/src/ldebug.h"
		"${SDK_DIR}/Lua/src/ldo.h"
		"${SDK_DIR}/Lua/src/lfunc.h"
		"${SDK_DIR}/Lua/src/lgc.h"
		"${SDK_DIR}/Lua/src/llex.h"
		"${SDK_DIR}/Lua/src/llimits.h"
		"${SDK_DIR}/Lua/src/lmem.h"
		"${SDK_DIR}/Lua/src/lobject.h"
		"${SDK_DIR}/Lua/src/lopcodes.h"
		"${SDK_DIR}/Lua/src/lparser.h"
		"${SDK_DIR}/Lua/src/lstate.h"
		"${SDK_DIR}/Lua/src/lstring.h"
		"${SDK_DIR}/Lua/src/ltable.h"
		"${SDK_DIR}/Lua/src/ltm.h"
		"${SDK_DIR}/Lua/src/lua.h"
		"${SDK_DIR}/Lua/src/luaconf.h"
		"${SDK_DIR}/Lua/src/lualib.h"
		"${SDK_DIR}/Lua/src/lundump.h"
		"${SDK_DIR}/Lua/src/lvm.h"
		"${SDK_DIR}/Lua/src/lzio.h"
)

# -- luac.waf_files --
sources_platform(ALL)
add_sources("NoUberFile"
	PROJECTS LuaCompiler
	SOURCE_GROUP "RootLuac"
		"${SDK_DIR}/Lua/src/luac.c"
)

end_sources()
#END-FILE-LIST

CryEngineStaticModule(lua SOLUTION_FOLDER "Libs")
target_include_directories(${THIS_PROJECT} INTERFACE "${SDK_DIR}/Lua/src" )

if (WINDOWS)
	CryConsoleApplication(LuaCompiler SOLUTION_FOLDER "Libs")
	target_link_libraries(${THIS_PROJECT} PRIVATE lua)
else()
	target_compile_options(${THIS_PROJECT} PRIVATE -w)
endif()
