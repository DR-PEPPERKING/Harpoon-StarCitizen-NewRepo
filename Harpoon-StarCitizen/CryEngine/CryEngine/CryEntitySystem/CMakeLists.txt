#START-FILE-LIST
# File List auto generated by waf2cmake.py, do not modify manually.

start_sources()
# -- cryentitysystem.waf_files --
sources_platform(ALL)
add_sources("CryEntitySystem_component_uber.cpp"
	SOURCE_GROUP "Components\\\\Area"
		"AreaProxy.cpp"
		"AreaProxy.h"
	SOURCE_GROUP "Components\\\\Audio"
		"EntityAudioProxy.cpp"
		"EntityAudioProxy.h"
	SOURCE_GROUP "Components\\\\CameraProxy"
		"CameraProxy.cpp"
		"CameraProxy.h"
	SOURCE_GROUP "Components\\\\ClipVolume"
		"ClipVolumeProxy.cpp"
		"ClipVolumeProxy.h"
	SOURCE_GROUP "Components\\\\DynamicResponse"
		"DynamicResponseProxy.cpp"
		"DynamicResponseProxy.h"
	SOURCE_GROUP "Components\\\\FlowGraph"
		"FlowGraphProxy.cpp"
		"FlowGraphProxy.h"
		"FlowGraphComponent.cpp"
		"FlowGraphComponent.h"
	SOURCE_GROUP "Proxy\\\\NetEntity"
		"NetEntity.cpp"
		"NetEntity.h"
	SOURCE_GROUP "Components\\\\Physics"
		"PhysicsEventListener.cpp"
		"PhysicsProxy.cpp"
		"RopeProxy.cpp"
		"PhysicsEventListener.h"
		"PhysicsProxy.h"
		"RopeProxy.h"
	SOURCE_GROUP "Components\\\\Render"
		"EntitySlot.cpp"
		"EntitySlot.h"
		"RenderProxy.cpp"
		"RenderProxy.h"
	SOURCE_GROUP "Components\\\\Script"
		"EntityScript.cpp"
		"ScriptBind_Entity.cpp"
		"ScriptProperties.cpp"
		"ScriptProxy.cpp"
		"EntityScript.h"
		"ScriptBind_Entity.h"
		"ScriptProperties.h"
		"ScriptProxy.h"
	SOURCE_GROUP "Components\\\\SubstitutionProxy"
		"SubstitutionProxy.cpp"
		"SubstitutionProxy.h"
	SOURCE_GROUP "Components\\\\TrackView"
		"EntityNodeProxy.cpp"
		"EntityNodeProxy.h"
	SOURCE_GROUP "Components\\\\TriggerProxy"
		"TriggerProxy.cpp"
		"TriggerProxy.h"

	SOURCE_GROUP "Schematyc"
		"Schematyc/EntitySchematycActions.h"
		"Schematyc/EntitySchematycUtilFunctions.h"
		"Schematyc/EntityObjectDebugger.cpp"
		"Schematyc/EntityObjectDebugger.h"
		"Schematyc/EntityUtilsComponent.cpp"
		"Schematyc/EntityUtilsComponent.h"
)

add_sources("CryEntitySystem_uber_0.cpp"
	SOURCE_GROUP "EntityClass"
		"EntityClass.cpp"
		"EntityClassRegistry.cpp"
		"EntityClass.h"
		"EntityClassRegistry.h"
	SOURCE_GROUP "Root"
		"AreaSolid.h"
		"AreaUtil.h"
		"BSPTree3D.h"
		"resource.h"
	SOURCE_GROUP "Source Files"
		"AffineParts.cpp"
		"AreaSolid.cpp"
		"BSPTree3D.cpp"
		"CryEntityDLL.cpp"
		"Entity.cpp"
		"EntityArchetype.cpp"
		"EntityCVars.cpp"
		"EntityLayer.cpp"
		"EntitySystem.cpp"
		"AffineParts.h"
		"Entity.h"
		"EntityArchetype.h"
		"EntityCVars.h"
		"EntityIt.h"
		"EntityLayer.h"
		"EntitySystem.h"
		"EntityComponentsVector.cpp"
		"EntityComponentsVector.h"
		"EntityComponentsCache.cpp"
		"EntityComponentsCache.h"
		"SaltBufferArray.h"
		"CharacterBoneAttachmentManager.h"
		"CharacterBoneAttachmentManager.cpp"
		"GeomCacheAttachmentManager.h"
		"GeomCacheAttachmentManager.cpp"
		"EntityUnitTests.cpp"
		"EntityUnitTests.h"
)

add_sources("CryEntitySystem_uber_1.cpp"
	SOURCE_GROUP "AreaManager"
		"Area.cpp"
		"AreaGrid.cpp"
		"AreaManager.cpp"
		"Area.h"
		"AreaGrid.h"
		"AreaManager.h"
	SOURCE_GROUP "BreakableManager"
		"BreakableManager.cpp"
		"BreakablePlane.cpp"
		"BreakablePlane.h"
		"BreakableManager.h"
	SOURCE_GROUP "Loading"
		"EntityLoadManager.cpp"
		"EntityLoadManager.h"
	SOURCE_GROUP "PartitionGrid"
		"PartitionGrid.cpp"
		"ProximityTriggerSystem.cpp"
		"RadixSort.cpp"
		"PartitionGrid.h"
		"ProximityTriggerSystem.h"
		"RadixSort.h"
)

add_sources("NoUberFile"
	SOURCE_GROUP "Root"
		"stdafx.cpp"
		"stdafx.h"
)

end_sources()
#END-FILE-LIST

macro(setup_CryEntitySystem)
	if (ORBIS OR CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
		target_compile_options(${THIS_PROJECT} PRIVATE
			-Wno-reorder
			-Wno-unknown-pragmas
			-Wno-parentheses
			-Wno-switch
			-Wno-format
			-Wno-dynamic-class-memaccess
			-Wno-unused-private-field
			-Wno-unused-value
			-Wno-invalid-offsetof
			-Wno-multichar
			-Wno-empty-body
			-Wno-unused-lambda-capture
			-Wno-unused-function
			-Wno-char-subscripts
			-Wno-comment
			-Wno-c++11-narrowing
			-Wno-tautological-constant-out-of-range-compare
		)
    elseif(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
		target_compile_options(${THIS_PROJECT} PRIVATE
			-Wno-unused-function
			-Wno-unused-value
			-Wno-sign-compare
			-Wno-ignored-attributes
			-Wno-invalid-offsetof
			-Wno-aligned-new
			-Wno-int-in-bool-context
			-Wno-unused-but-set-variable
			-Wno-misleading-indentation
			-Wno-strict-aliasing
			-Wno-maybe-uninitialized
			-Wno-unknown-pragmas
			-Wno-array-bounds
			-Wno-multichar
			-Wno-char-subscripts
			-Wno-conversion-null
			-Wno-parentheses
			-Wno-comment
			-Wno-reorder
			-Wno-address
			-Wno-format
			-Wno-switch
		)
    endif()
endmacro()

CryEngineModule(CryEntitySystem PCH "stdafx.cpp" SOLUTION_FOLDER "CryEngine")
setup_CryEntitySystem()
if (OPTION_UNIT_TEST AND NOT OPTION_STATIC_LINKING) #Currently an additional static lib is only used by unit testing under non-monolithic mode
	CryEngineModule(CryEntitySystemLib PCH "stdafx.cpp" SOLUTION_FOLDER "CryEngine" FORCE_STATIC)
	setup_CryEntitySystem()
endif()
