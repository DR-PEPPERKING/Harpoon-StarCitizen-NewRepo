#START-FILE-LIST
# File List auto generated by waf2cmake.py, do not modify manually.

start_sources()
# -- cryaudioimpl.waf_files --
sources_platform(ALL)
add_sources("CryAudioImpl_uber_0.cpp"
	SOURCE_GROUP "Header Files"
		"AisacControl.h"
		"AisacControlAdvanced.h"
		"AisacEnvironment.h"
		"AisacEnvironmentAdvanced.h"
		"AisacState.h"
		"BaseTriggerConnection.h"
		"Category.h"
		"CategoryAdvanced.h"
		"CategoryState.h"
		"Common.h"
		"Cue.h"
		"CueInstance.h"
		"CVars.h"
		"DspBus.h"
		"DspBusSetting.h"
		"Binary.h"
		"GameVariable.h"
		"GameVariableAdvanced.h"
		"GameVariableState.h"
		"GlobalData.h"
		"Impl.h"
		"IoInterface.h"
		"Listener.h"
		"Object.h"
		"resource.h"
		"SelectorLabel.h"
		"Snapshot.h"
	SOURCE_GROUP "Source Files"
		"AisacControl.cpp"
		"AisacControlAdvanced.cpp"
		"AisacEnvironment.cpp"
		"AisacEnvironmentAdvanced.cpp"
		"AisacState.cpp"
		"Category.cpp"
		"CategoryAdvanced.cpp"
		"CategoryState.cpp"
		"Common.cpp"
		"CryAudioImpl.cpp"
		"Cue.cpp"
		"CueInstance.cpp"
		"CVars.cpp"
		"DspBus.cpp"
		"DspBusSetting.cpp"
		"GameVariable.cpp"
		"GameVariableAdvanced.cpp"
		"GameVariableState.cpp"
		"Impl.cpp"
		"IoInterface.cpp"
		"Listener.cpp"
		"Object.cpp"
		"SelectorLabel.cpp"
		"Snapshot.cpp"
)

add_sources("NoUberFile"
	SOURCE_GROUP "Root"
		"stdafx.cpp"
		"stdafx.h"
)

end_sources()
#END-FILE-LIST

if(AUDIO_ADX2)
	if(WINDOWS)
		set( ADX2_PLATFORM_FOLDER pc )
		set( ADX2_LIBS_FOLDER libs/x64 )
		set( ADX2_LIBS
			cri_base_pcx64
			cri_framework_pcx64
			cri_file_system_pcx64
			cri_atom_pcx64
			cri_atom_monitor_pcx64
			cri_mana_pcx64
		)
	elseif(DURANGO)
		set( ADX2_PLATFORM_FOLDER xboxone )
		set( ADX2_LIBS_FOLDER libs )
		set( ADX2_LIBS
			cri_base_xboxone
			cri_framework_xboxone
			cri_file_system_xboxone
			cri_atom_xboxone
			cri_atom_monitor_xboxone
			cri_mana_xboxone
		)
	elseif(ORBIS)
		set( ADX2_PLATFORM_FOLDER ps4 )
		set( ADX2_LIBS_FOLDER libs )
		set( ADX2_LIBS
			libcri_base_ps4
			libcri_framework_ps4
			libcri_file_system_ps4
			libcri_atom_ps4
			libcri_atom_monitor_ps4
			libcri_mana_ps4
		)
	elseif(LINUX)
		set( ADX2_PLATFORM_FOLDER linux )
		set( ADX2_LIBS_FOLDER libs/x86_64-unknown-linux-gnu )
		set( ADX2_LIBS
			libcri_base
			libcri_file_system
			libcri_atom
		)
	endif()

	CryEngineModule(CryAudioImplAdx2 FORCE_SHARED_WIN PCH "stdafx.cpp" SOLUTION_FOLDER "CryEngine/Audio/Implementations")
	target_compile_definitions(${THIS_PROJECT} PRIVATE $<$<NOT:$<CONFIG:Release>>:CRY_AUDIO_IMPL_ADX2_USE_DEBUG_CODE>)
	target_include_directories(${THIS_PROJECT} PRIVATE ../../Common "${SDK_DIR}/Audio/adx2/SDK/${ADX2_PLATFORM_FOLDER}/include" )

	set( ADX2_LIB_Path "${SDK_DIR}/Audio/adx2/SDK/${ADX2_PLATFORM_FOLDER}/${ADX2_LIBS_FOLDER}/" )
	make_library(ADX2_LIBS "${ADX2_LIB_Path}")
	target_link_libraries( ${THIS_PROJECT} PRIVATE ${ADX2_LIBS} )

	if (ORBIS OR CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
		target_compile_options(${THIS_PROJECT} PRIVATE
			-Wno-format
		)
	elseif(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
		target_compile_options(${THIS_PROJECT} PRIVATE
			-Wno-format
		)
	endif()

else()
	CryFileContainer(CryAudioImplAdx2 SOLUTION_FOLDER "CryEngine/Audio/Implementations")
endif()