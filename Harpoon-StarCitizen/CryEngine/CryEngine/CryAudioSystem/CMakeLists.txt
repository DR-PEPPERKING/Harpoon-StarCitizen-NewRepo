#START-FILE-LIST
# File List auto generated by waf2cmake.py, do not modify manually.

start_sources()
# -- cryaudiosystem.waf_files --
sources_platform(ALL)
add_sources("CryAudioSystem_uber_0.cpp"
	SOURCE_GROUP "Header Files"
		"CallbackRequestData.h"
		"Common.h"
		"CVars.h"
		"Debug.h"
		"Entity.h"
		"EventListenerManager.h"
		"File.h"
		"FileCacheManager.h"
		"Impl.h"
		"Listener.h"
		"ListenerManager.h"
		"ListenerRequestData.h"
		"MainThread.h"
		"Managers.h"
		"Object.h"
		"ObjectRequestData.h"
		"OcclusionInfo.h"
		"PropagationProcessor.h"
		"RayInfo.h"
		"Request.h"
		"RequestData.h"
		"resource.h"
		"System.h"
		"SystemRequestData.h"
		"XMLProcessor.h"
	SOURCE_GROUP "Header Files\\\\Controls"
		"Environment.h"
		"Parameter.h"
		"PreloadRequest.h"
		"Setting.h"
		"Switch.h"
		"SwitchState.h"
		"Trigger.h"
		"TriggerInstance.h"
		"TriggerUtils.h"
	SOURCE_GROUP "Header Files\\\\DefaultControls"
		"GetFocusTrigger.h"
		"LoseFocusTrigger.h"
		"MuteAllTrigger.h"
		"PauseAllTrigger.h"
		"PreviewTrigger.h"
		"ResumeAllTrigger.h"
		"UnmuteAllTrigger.h"
	SOURCE_GROUP "Source Files"
		"Common.cpp"
		"CryAudioSystem.cpp"
		"CVars.cpp"
		"EventListenerManager.cpp"
		"FileCacheManager.cpp"
		"Impl.cpp"
		"Listener.cpp"
		"ListenerManager.cpp"
		"MainThread.cpp"
		"Managers.cpp"
		"Object.cpp"
		"PropagationProcessor.cpp"
		"RequestData.cpp"
		"System.cpp"
		"XMLProcessor.cpp"
	SOURCE_GROUP "Source Files\\\\Controls"
		"Environment.cpp"
		"Parameter.cpp"
		"PreloadRequest.cpp"
		"Setting.cpp"
		"Switch.cpp"
		"SwitchState.cpp"
		"Trigger.cpp"
		"TriggerInstance.cpp"
		"TriggerUtils.cpp"
	SOURCE_GROUP "Source Files\\\\DefaultControls"
		"GetFocusTrigger.cpp"
		"LoseFocusTrigger.cpp"
		"MuteAllTrigger.cpp"
		"PauseAllTrigger.cpp"
		"PreviewTrigger.cpp"
		"ResumeAllTrigger.cpp"
		"UnmuteAllTrigger.cpp"
)

add_sources("NoUberFile"
	SOURCE_GROUP "Root"
		"stdafx.cpp"
		"stdafx.h"
)

end_sources()
#END-FILE-LIST

MACRO(setup_cryaudio)
	target_include_directories(${THIS_PROJECT} PRIVATE Common)
	if(DURANGO)
		target_link_libraries(${THIS_PROJECT} PRIVATE acphal)
	endif()
	if (ORBIS OR CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
		target_compile_options(${THIS_PROJECT} PRIVATE
			-Wno-format
			-Wno-multichar
			-Wno-parentheses
			-Wno-unknown-pragmas
			-Wno-unused-function
			-Wno-unused-private-field
		)
    elseif(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
		target_compile_options(${THIS_PROJECT} PRIVATE
			-Wno-format
			-Wno-maybe-uninitialized
			-Wno-misleading-indentation
			-Wno-multichar
			-Wno-parentheses
			-Wno-sign-compare
			-Wno-strict-aliasing
			-Wno-unknown-pragmas
			-Wno-unused-but-set-variable
			-Wno-unused-function
		)
    endif()

		target_compile_definitions(${THIS_PROJECT} PRIVATE $<$<NOT:$<CONFIG:Release>>:CRY_AUDIO_USE_DEBUG_CODE>)

		IF(AUDIO_USE_OCCLUSION)
			target_compile_definitions(${THIS_PROJECT} PRIVATE -DCRY_AUDIO_USE_OCCLUSION)
		ENDIF()
ENDMACRO()

CryEngineModule(CryAudioSystem PCH "stdafx.cpp" SOLUTION_FOLDER "CryEngine/Audio")
setup_cryaudio()
if (OPTION_UNIT_TEST AND NOT OPTION_STATIC_LINKING) #Currently an additional static lib is only used by unit testing under non-monolithic mode
	CryEngineModule(CryAudioSystemLib PCH "stdafx.cpp" SOLUTION_FOLDER "CryEngine/Audio" FORCE_STATIC)
	setup_cryaudio()
endif()
