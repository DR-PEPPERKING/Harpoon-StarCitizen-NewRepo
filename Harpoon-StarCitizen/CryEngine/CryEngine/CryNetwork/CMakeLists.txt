if (WINDOWS OR DURANGO)
	set(SUPPORT_CNG_DEF_VAL OFF)
	if (DURANGO)
		set(SUPPORT_CNG_DEF_VAL ON)
	endif()
	option(OPTION_CRYNETWORK_SUPPORT_CNG "Enable encryption with CNG library" ${SUPPORT_CNG_DEF_VAL})
endif()
if (NOT DURANGO)
	option(OPTION_CRYNETWORK_SUPPORT_TOMCRYPT "Enable encryption with LibTomCrypt library" ON)
endif()
option(OPTION_CRYNETWORK_GENERATE_ENCRYPTION_KEYS "Use auto-generated keys for encryption" ON)
option(OPTION_CRYNETWORK_SUPPORT_GAME_QUERY "Enable support of GameQuery system" ON)

#START-FILE-LIST
# File List auto generated by waf2cmake.py, do not modify manually.

start_sources()
# -- crynetwork.waf_files --
sources_platform(ALL)
add_sources("CryNetwork_protocol_uber.cpp"
	PROJECTS CryNetwork
	SOURCE_GROUP "Protocol"
		"Protocol/BandwidthCalculator.cpp"
		"Protocol/CTPEndpoint.cpp"
		"Protocol/ExponentialKeyExchange.cpp"
		"Protocol/FrameTypes.cpp"
		"Protocol/MessageMapper.cpp"
		"Protocol/MessageQueue.cpp"
		"Protocol/NetChannel.cpp"
		"Protocol/NetNub.cpp"
		"Protocol/NewMessageQueue.cpp"
		"Protocol/NullSendable.cpp"
		"Protocol/PacketRateCalculator.cpp"
		"Protocol/PMTUDiscovery.cpp"
		"Protocol/Serialize.cpp"
		"Protocol/StatsCollector.cpp"
		"Protocol/BandwidthCalculator.h"
		"Protocol/NewMessageQueue.h"
		"Protocol/CTPEndpoint.h"
		"Protocol/ExponentialKeyExchange.h"
		"Protocol/FrameTypes.h"
		"Protocol/ICTPEndpointListener.h"
		"Protocol/INubMember.h"
		"Protocol/MessageMapper.h"
		"Protocol/MessageQueue.h"
		"Protocol/NetChannel.h"
		"Protocol/NetNub.h"
		"Protocol/NullSendable.h"
		"Protocol/PacketRateCalculator.h"
		"Protocol/PMTUDiscovery.h"
		"Protocol/Serialize.h"
		"Protocol/StatsCollector.h"
		"Protocol/NetChannelSecurity.cpp"
		"Protocol/NetChannelSecurity.h"
)

add_sources("CryNetwork_socket_uber.cpp"
	PROJECTS CryNetwork
	SOURCE_GROUP "Socket Library"
		"Socket/SocketIOManagerLobbyIDAddr.h"
		"Socket/CompositeDatagramSocket.cpp"
		"Socket/IDatagramSocket.cpp"
		"Socket/InternetSimulatorSocket.cpp"
		"Socket/ISocketIOManager.cpp"
		"Socket/IStreamSocket.cpp"
		"Socket/LocalDatagramSocket.cpp"
		"Socket/NetResolver.cpp"
		"Socket/SocketError.cpp"
		"Socket/SocketIOManagerIOCP.cpp"
		"Socket/SocketIOManagerLobbyIDAddr.cpp"
		"Socket/SocketIOManagerSelect.cpp"
		"Socket/TCPStreamSocket.cpp"
		"Socket/UDPDatagramSocket.cpp"
		"Socket/WatchdogTimer.cpp"
		"Socket/CompositeDatagramSocket.h"
		"Socket/IDatagramSocket.h"
		"Socket/InternetSimulatorSocket.h"
		"Socket/ISocketIOManager.h"
		"Socket/IStreamSocket.h"
		"Socket/LocalDatagramSocket.h"
		"Socket/NetResolver.h"
		"Socket/SocketError.h"
		"Socket/SocketIOManagerIOCP.h"
		"Socket/SocketIOManagerNull.h"
		"Socket/SocketIOManagerSelect.h"
		"Socket/TCPStreamSocket.h"
		"Socket/UDPDatagramSocket.h"
		"Socket/WatchdogTimer.h"
)

add_sources("CryNetwork_uber_0.cpp"
	PROJECTS CryNetwork
	SOURCE_GROUP "Compression"
		"Compression/AdaptiveBoolPolicy.cpp"
		"Compression/AdaptiveBoolPolicy2.cpp"
		"Compression/AdaptiveFloat.cpp"
		"Compression/AdaptiveFloatPolicy.cpp"
		"Compression/AdaptiveOrientationPolicy.cpp"
		"Compression/AdaptiveUnitVec3Policy.cpp"
		"Compression/AdaptiveVec3Policy.cpp"
		"Compression/AdaptiveVelocity.cpp"
		"Compression/AdaptiveVelocityPolicy.cpp"
		"Compression/ArithAlphabet.cpp"
		"Compression/ArithModel.cpp"
		"Compression/ArithPrimitives.cpp"
		"Compression/BiggerOrSmallerPolicy.cpp"
		"Compression/BoolCompress.cpp"
		"Compression/BoolCompress2.cpp"
		"Compression/CompressionManager.cpp"
		"Compression/DefaultPolicy.cpp"
		"Compression/EntityIdPolicy.cpp"
		"Compression/ErrorDistributionEncoding.cpp"
		"Compression/FloatAsIntPolicy.cpp"
		"Compression/GaussianEncoding.cpp"
		"Compression/Int64Policy.cpp"
		"Compression/IntegerValuePredictor.cpp"
		"Compression/JumpyPolicy.cpp"
		"Compression/NoSendPolicy.cpp"
		"Compression/OwnChannelCompressionPolicy.cpp"
		"Compression/PredictiveFloat.cpp"
		"Compression/PredictiveFloatTracker.cpp"
		"Compression/QuantizedVec3.cpp"
		"Compression/Quantizer.cpp"
		"Compression/RangedIntPolicy.cpp"
		"Compression/RangedUnsignedIntPolicy.cpp"
		"Compression/SegmentedCompressionSpace.cpp"
		"Compression/SerializationChunk.cpp"
		"Compression/StationaryInteger.cpp"
		"Compression/StationaryUnsignedInteger.cpp"
		"Compression/StringTable.cpp"
		"Compression/StringTablePolicy.cpp"
		"Compression/TimePolicy.cpp"
		"Compression/TimePolicyWithDistribution.cpp"
		"Compression/Vec3TableCompressor.cpp"
		"Compression/RangedUnsignedIntPolicy.h"
		"Compression/StationaryUnsignedInteger.h"
		"Compression/AdaptiveFloat.h"
		"Compression/AdaptiveVelocity.h"
		"Compression/ArithAlphabet.h"
		"Compression/ArithModel.h"
		"Compression/ArithPrimitives.h"
		"Compression/BoolCompress.h"
		"Compression/BoolCompress2.h"
		"Compression/CompressionManager.h"
		"Compression/ErrorDistributionEncoding.h"
		"Compression/GaussianEncoding.h"
		"Compression/GaussianEncoding_SlotData.h"
		"Compression/ICompressionPolicy.h"
		"Compression/ICompressionPolicy2.h"
		"Compression/CompressionPolicyTime.h"
		"Compression/IntegerValuePredictor.h"
		"Compression/OwnChannelCompressionPolicy.h"
		"Compression/PredictiveBase.h"
		"Compression/PredictiveFloat.h"
		"Compression/PredictiveFloatTracker.h"
		"Compression/Quantizer.h"
		"Compression/RangedIntPolicy.h"
		"Compression/SegmentedCompressionSpace.h"
		"Compression/SerializationChunk.h"
		"Compression/StationaryInteger.h"
		"Compression/StringTable.h"
		"Compression/TimePolicy.h"
		"Compression/TimePolicyWithDistribution.h"
	SOURCE_GROUP "Root"
		"resource.h"
	SOURCE_GROUP "Streams"
		"Streams/ByteStream.cpp"
		"Streams/CompressingStream.cpp"
		"Streams/SimpleInputStream.cpp"
		"Streams/SimpleOutputStream.cpp"
		"Streams/ArithStream.h"
		"Streams/ByteStream.h"
		"Streams/CommStream.h"
		"Streams/CompressingStream.h"
		"Streams/SimpleInputStream.h"
		"Streams/SimpleOutputStream.h"
		"Streams/SimpleStreamDefs.h"
)

add_sources("CryNetwork_uber_1.cpp"
	PROJECTS CryNetwork
	SOURCE_GROUP "Cryptography"
		"Cryptography/rijndael.cpp"
		"Cryptography/StreamCipher.cpp"
		"Cryptography/Whirlpool.cpp"
		"Cryptography/rijndael.h"
		"Cryptography/StreamCipher.h"
		"Cryptography/Whirlpool.h"
		"Cryptography/CngCrypto.cpp"
		"Cryptography/CngCrypto.h"
		"Cryptography/TomCryptCrypto.cpp"
		"Cryptography/TomCryptCrypto.h"
	SOURCE_GROUP "Main"
		"CryNetwork.cpp"
		"DistributedLogger.cpp"
		"MementoMemoryManager.cpp"
		"NetCVars.cpp"
		"NetLog.cpp"
		"NetTimer.cpp"
		"Network.cpp"
		"Utils.cpp"
		"WorkQueue.cpp"
		"INetworkPrivate.h"
		"AutoFreeHandle.h"
		"Config.h"
		"DistributedLogger.h"
		"Errors.h"
		"FixedSizeArena.h"
		"INetworkMember.h"
		"MementoMemoryManager.h"
		"NetCVars.h"
		"NetLog.h"
		"NetTimer.h"
		"Network.h"
		"objcnt.h"
		"objcnt_defs.h"
		"PolymorphicQueue.h"
		"STLMementoAllocator.h"
		"Utils.h"
		"WorkQueue.h"
	SOURCE_GROUP "RCon"
		"RemoteControl/RemoteControl.cpp"
		"RemoteControl/Protocol.h"
		"RemoteControl/RemoteControl.h"
)

add_sources("CryNetwork_uber_2.cpp"
	PROJECTS CryNetwork
	SOURCE_GROUP "Context"
		"Context/Authentication.cpp"
		"Context/BreakagePlayback.cpp"
		"Context/CET_Server.cpp"
		"Context/ClientContextView.cpp"
		"Context/ContextEstablisher.cpp"
		"Context/ContextView.cpp"
		"Context/ContextViewStateManager.cpp"
		"Context/DemoPlaybackListener.cpp"
		"Context/DemoRecordListener.cpp"
		"Context/NetContext.cpp"
		"Context/NetContextState.cpp"
		"Context/PerformBreakage.cpp"
		"Context/ServerContextView.cpp"
		"Context/SessionID.cpp"
		"Context/SyncedFile.cpp"
		"Context/SyncedFilePak.cpp"
		"Context/SyncedFileSet.cpp"
		"Context/UpdateAspectDataContext.cpp"
		"Context/UpdateMessage.cpp"
		"Context/INetContextState.h"
		"Context/Authentication.h"
		"Context/BreakagePlayback.h"
		"Context/CET_Server.h"
		"Context/ChangeList.h"
		"Context/ClientContextView.h"
		"Context/ContextEstablisher.h"
		"Context/ContextView.h"
		"Context/ContextViewStateManager.h"
		"Context/DemoDefinitions.h"
		"Context/DemoPlaybackListener.h"
		"Context/DemoRecordListener.h"
		"Context/IContextViewExtension.h"
		"Context/INetContextListener.h"
		"Context/NetContext.h"
		"Context/NetContextState.h"
		"Context/PerformBreakage.h"
		"Context/RMILogger.h"
		"Context/ServerContextView.h"
		"Context/SessionID.h"
		"Context/SyncContext.h"
		"Context/SyncedFile.h"
		"Context/SyncedFilePak.h"
		"Context/SyncedFileSet.h"
		"Context/UpdateAspectDataContext.h"
		"Context/UpdateMessage.h"
	SOURCE_GROUP "Context\\\\History"
		"Context/History/AuthorityHistory.cpp"
		"Context/History/ConfigurationHistory.cpp"
		"Context/History/History.cpp"
		"Context/History/MementoHistory.cpp"
		"Context/History/ProfileHistory.cpp"
		"Context/History/RegularlySyncedItem.cpp"
		"Context/History/AuthorityHistory.h"
		"Context/History/ConfigurationHistory.h"
		"Context/History/History.h"
		"Context/History/MementoHistory.h"
		"Context/History/ProfileHistory.h"
		"Context/History/RegularlySyncedItem.h"
	SOURCE_GROUP "Services"
		"Services/NetworkACL/NetProfileTokens.cpp"
		"Services/ServiceManager.cpp"
		"Services/NetworkACL/NetProfileTokens.h"
		"Services/ServiceManager.h"
	SOURCE_GROUP "Services\\\\CryLAN"
		"Services/CryLAN/LanQueryListener.cpp"
		"Services/CryLAN/LanQueryListener.h"
)

add_sources("CryNetwork_uber_3.cpp"
	PROJECTS CryNetwork
	SOURCE_GROUP "Debug Kit"
		"DebugKit/DebugKit.cpp"
		"DebugKit/DebugOutput.cpp"
		"DebugKit/Encoding.cpp"
		"DebugKit/NetVis.cpp"
		"DebugKit/NetworkInspector.cpp"
		"DebugKit/DebugKit.h"
		"DebugKit/DebugOutput.h"
		"DebugKit/Encoding.h"
		"DebugKit/NetVis.h"
		"DebugKit/NetworkInspector.h"
	SOURCE_GROUP "Http"
		"Http/AutoConfigDownloader.cpp"
		"Http/SimpleHttpServer.cpp"
		"Http/AutoConfigDownloader.h"
		"Http/SimpleHttpServer.h"
		"Http/cry_sha1.h"
		"Http/cry_sha1.cpp"
	SOURCE_GROUP "VOIP"
		"VOIP/IVoiceDecoder.cpp"
		"VOIP/IVoiceEncoder.cpp"
		"VOIP/SpeexCodec.cpp"
		"VOIP/VoiceManager.cpp"
		"VOIP/VoicePacket.cpp"
		"Context/VoiceContext.cpp"
		"VOIP/IVoiceDecoder.h"
		"VOIP/IVoiceEncoder.h"
		"VOIP/IVoicePacketListener.h"
		"Context/VoiceContext.h"
		"VOIP/VoiceManager.h"
		"VOIP/VoicePacket.h"
)

add_sources("CryNetwork_uber_4.cpp"
	PROJECTS CryNetwork
	SOURCE_GROUP "Debug"
		"NetDebugChannelViewer.cpp"
		"NetDebugInfo.cpp"
		"NetDebugInternetSimulator.cpp"
		"NetDebugProfileViewer.cpp"
		"NetDebugServerInfo.cpp"
		"NetDebugTrafficBandwidth.cpp"
		"NetProfile.cpp"
		"NetDebugChannelViewer.h"
		"NetDebugInfo.h"
		"NetDebugInternetSimulator.h"
		"NetDebugProfileViewer.h"
		"NetDebugServerInfo.h"
		"NetDebugTrafficBandwidth.h"
		"NetProfile.h"
)

add_sources("NoUberFile"
	PROJECTS CryNetwork
	SOURCE_GROUP "Root"
		"StdAfx.cpp"
		"StdAfx.h"
)

# -- crynetwork_durango.waf_files --
sources_platform(DURANGO)
add_sources("CryNetwork_socket_uber.cpp"
	PROJECTS CryNetwork
	SOURCE_GROUP "Socket Library"
		"Socket/SocketIOManagerDurango.h"
		"Socket/SocketIOManagerDurango.cpp"
		"Socket/DurangoAssociationTemplate.h"
)

end_sources()
#END-FILE-LIST

CryEngineModule(CryNetwork PCH "StdAfx.cpp" SOLUTION_FOLDER "CryEngine")

target_include_directories( ${THIS_PROJECT} PRIVATE "${SDK_DIR}/speex-1.0.5/include" )

if(WINDOWS)
	find_library(SPEEX libspeex-1.0.5 PATHS "${SDK_DIR}/speex-1.0.5/lib/x64" )
endif()
mark_as_advanced(FORCE SPEEX)

target_link_libraries(${THIS_PROJECT} PRIVATE bigdigits)

if (OPTION_CRYNETWORK_SUPPORT_CNG)
	target_compile_definitions(${THIS_PROJECT} PRIVATE CRYNETWORK_USE_CNG)
	target_link_libraries( ${THIS_PROJECT} PRIVATE bcrypt )
endif()

if (OPTION_CRYNETWORK_SUPPORT_TOMCRYPT)
	target_compile_definitions(${THIS_PROJECT} PRIVATE CRYNETWORK_USE_TOMCRYPT)
	target_link_libraries( ${THIS_PROJECT} PRIVATE tomcrypt )
endif()

if (OPTION_CRYNETWORK_GENERATE_ENCRYPTION_KEYS)
	target_compile_definitions(${THIS_PROJECT} PRIVATE CRYNETWORK_GENERATE_ENCRYPTION_KEYS)
endif()
if (OPTION_CRYNETWORK_SUPPORT_GAME_QUERY)
	target_compile_definitions(${THIS_PROJECT} PRIVATE CRYNETWORK_SUPPORT_GAME_QUERY)
endif()

if(WINDOWS)
	# Exclude Default libcmt.lib library
	set_property(TARGET ${THIS_PROJECT} APPEND_STRING PROPERTY LINK_FLAGS " /NODEFAULTLIB:libcmt.lib") 
	target_link_libraries( ${THIS_PROJECT} PRIVATE Ws2_32 Mswsock "${SPEEX}" )
endif(WINDOWS)

if(DURANGO)
	target_link_libraries( ${THIS_PROJECT} PRIVATE Ws2_32 )
endif(DURANGO)

if (ORBIS OR CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
	target_compile_options(${THIS_PROJECT} PRIVATE
		-Wno-parentheses
		-Wno-reorder
		-Wno-unused-value
		-Wno-unknown-pragmas
		-Wno-format
		-Wno-empty-body
		-Wno-unused-private-field
		-Wno-multichar
		-Wno-switch
		-Wno-unused-function
		-Wno-c++11-narrowing
		-Wno-comment
	)
elseif(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
	target_compile_options(${THIS_PROJECT} PRIVATE
		-Wno-unused-function
		-Wno-unused-value
		-Wno-sign-compare
		-Wno-ignored-attributes
		-Wno-int-in-bool-context
		-Wno-unused-but-set-variable
		-Wno-misleading-indentation
		-Wno-unknown-pragmas
		-Wno-strict-aliasing
		-Wno-maybe-uninitialized
		-Wno-uninitialized
		-Wno-narrowing
		-Wno-unused-const-variable
		-Wno-multichar
		-Wno-char-subscripts
		-Wno-parentheses
		-Wno-comment
		-Wno-address
		-Wno-format
		-Wno-switch
	)
endif()
