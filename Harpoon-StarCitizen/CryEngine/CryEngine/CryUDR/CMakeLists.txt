#START-FILE-LIST
# File List auto generated by waf2cmake.py, do not modify manually.

start_sources()
# -- cry_udr_core.waf_files --
sources_platform(ALL)

add_sources("CryUDR_Uber_0.cpp"
	SOURCE_GROUP "Root"
		"UDRSystem.cpp"
		"UDRSystem.h"
		"Node.h"
		"Node.cpp"
		"NodeStack.h"
		"NodeStack.cpp"
		"RenderPrimitives.h"
		"RenderPrimitives.cpp"
		"RenderPrimitiveCollection.h"
		"RenderPrimitiveCollection.cpp"
		"LogMessageCollection.h"
		"LogMessageCollection.cpp"
		"CVars.h"
		"CVars.cpp"
		"Tree.h"
		"Tree.cpp"
		"TreeManager.h"
		"TreeManager.cpp"
		"RecursiveSyncObject.h"
		"RecursiveSyncObject.cpp"
		"TimeMetadata.h"
		"TimeMetadata.cpp"
		"CryUDR.cpp"
)

add_sources("NoUberFile"
	SOURCE_GROUP "Root"
		"StdAfx.cpp"
		"StdAfx.h"
)

end_sources()
#END-FILE-LIST

macro(setup_CryUDR)
	if (ORBIS OR CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
		target_compile_options(${THIS_PROJECT} PRIVATE
			-Wno-reorder
			-Wno-unknown-pragmas
			-Wno-parentheses
			-Wno-format
			-Wno-switch
			-Wno-multichar
			-Wno-empty-body
			-Wno-unused-value
			-Wno-unused-function
			-Wno-unused-private-field
			-Wno-char-subscripts
			-Wno-c++11-narrowing
			-Wno-undefined-var-template
		)
	elseif(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
		target_compile_options(${THIS_PROJECT} PRIVATE
			-Wno-unused-function
			-Wno-unused-value
			-Wno-sign-compare
			-Wno-unused-but-set-variable
			-Wno-misleading-indentation
			-Wno-unknown-pragmas
			-Wno-multichar
			-Wno-int-in-bool-context
			-Wno-unused-result
			-Wno-array-bounds
			-Wno-strict-aliasing
			-Wno-maybe-uninitialized
			-Wno-logical-not-parentheses
			-Wno-char-subscripts
			-Wno-conversion-null
			-Wno-comment
			-Wno-reorder
			-Wno-parentheses
			-Wno-format
			-Wno-switch
		)
	endif()
endmacro()

CryEngineModule(CryUDR PCH "StdAfx.cpp" SOLUTION_FOLDER "CryEngine")
setup_CryUDR()
if (OPTION_UNIT_TEST AND NOT OPTION_STATIC_LINKING) #Currently an additional static lib is only used by unit testing under non-monolithic mode
	CryEngineModule(CryUDRLib PCH "StdAfx.cpp" SOLUTION_FOLDER "CryEngine" FORCE_STATIC)
	setup_CryUDR()
endif()